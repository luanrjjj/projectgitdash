{"ast":null,"code":"import React from 'react';\nimport color from 'tinycolor2';\nimport format from 'date-fns/format';\nimport getDay from 'date-fns/getDay';\nimport getYear from 'date-fns/getYear';\nimport parseISO from 'date-fns/parseISO';\nimport differenceInCalendarDays from 'date-fns/differenceInCalendarDays';\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport formatISO from 'date-fns/formatISO';\nimport getMonth from 'date-fns/getMonth';\nimport nextDay from 'date-fns/nextDay';\nimport subWeeks from 'date-fns/subWeeks';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \".styles_calendar__1s6ps {\\n  max-width: 100%;\\n  height: auto;\\n  overflow: visible;\\n}\\n\\n.styles_calendar__1s6ps text {\\n  fill: currentColor;\\n}\\n\\n.styles_block__1oBAV {\\n  stroke: rgba(0, 0, 0, 0.1);\\n  stroke-width: 1px;\\n  shape-rendering: geometricPrecision;\\n}\\n\\n.styles_footer__56qQv {\\n  display: flex;\\n}\\n\\n/*noinspection CssUnresolvedCustomProperty*/\\n@keyframes styles_loadingAnimation__1DJJ8 {\\n  0% {\\n    fill: var(--react-activity-calendar-loading);\\n  }\\n  50% {\\n    fill: var(--react-activity-calendar-loading-active);\\n  }\\n  100% {\\n    fill: var(--react-activity-calendar-loading);\\n  }\\n}\\n\";\nvar styles = {\n  \"calendar\": \"styles_calendar__1s6ps\",\n  \"block\": \"styles_block__1oBAV\",\n  \"footer\": \"styles_footer__56qQv\",\n  \"loadingAnimation\": \"styles_loadingAnimation__1DJJ8\"\n};\nstyleInject(css_248z);\nconst NAMESPACE = 'react-activity-calendar';\nconst MIN_DISTANCE_MONTH_LABELS = 2;\nconst DEFAULT_THEME = createCalendarTheme('#042a33');\n\nfunction groupByWeeks(days, weekStart = 0 // 0 = Sunday\n) {\n  if (days.length === 0) {\n    return [];\n  } // Determine the first date of the calendar. If the first contribution date is\n  // not specified week day the desired day one week earlier will be selected.\n\n\n  const firstDate = parseISO(days[0].date);\n  const firstCalendarDate = getDay(firstDate) === weekStart ? firstDate : subWeeks(nextDay(firstDate, weekStart), 1); // In order to correctly group contributions by week it is necessary to left pad the list\n\n  const paddedDays = [...Array(differenceInCalendarDays(firstDate, firstCalendarDate)).fill(undefined), ...days];\n  return Array(Math.ceil(paddedDays.length / 7)).fill(undefined).map((_, calendarWeek) => paddedDays.slice(calendarWeek * 7, calendarWeek * 7 + 7));\n}\n\nfunction getMonthLabels(weeks, monthNames = DEFAULT_MONTH_LABELS) {\n  return weeks.reduce((labels, week, index) => {\n    const firstWeekDay = week.find(day => day !== undefined);\n\n    if (!firstWeekDay) {\n      throw new Error(`Unexpected error: Week is empty: [${week}]`);\n    }\n\n    const month = monthNames[getMonth(parseISO(firstWeekDay.date))];\n    const prev = labels[labels.length - 1];\n\n    if (index === 0 || prev.text !== month) {\n      return [...labels, {\n        x: index,\n        y: 0,\n        text: month\n      }];\n    }\n\n    return labels;\n  }, []).filter((label, index, labels) => {\n    if (index === 0) {\n      return labels[1] && labels[1].x - label.x > MIN_DISTANCE_MONTH_LABELS;\n    }\n\n    return true;\n  });\n}\n\nfunction createCalendarTheme(baseColor, emptyColor = color('white').darken(8).toHslString()) {\n  const base = color(baseColor);\n\n  if (!base.isValid()) {\n    return DEFAULT_THEME;\n  }\n\n  return {\n    level4: base.setAlpha(0.92).toHslString(),\n    level3: base.setAlpha(0.76).toHslString(),\n    level2: base.setAlpha(0.6).toHslString(),\n    level1: base.setAlpha(0.44).toHslString(),\n    level0: emptyColor\n  };\n}\n\nfunction getTheme(theme, color) {\n  if (theme) {\n    return Object.assign({}, DEFAULT_THEME, theme);\n  }\n\n  if (color) {\n    return createCalendarTheme(color);\n  }\n\n  return DEFAULT_THEME;\n}\n\nfunction getClassName(name, styles) {\n  if (styles) {\n    return `${NAMESPACE}__${name} ${styles}`;\n  }\n\n  return `${NAMESPACE}__${name}`;\n}\n\nfunction generateEmptyData() {\n  const year = new Date().getFullYear();\n  const days = eachDayOfInterval({\n    start: new Date(year, 0, 1),\n    end: new Date(year, 11, 31)\n  });\n  return days.map(date => ({\n    date: formatISO(date, {\n      representation: 'date'\n    }),\n    count: 0,\n    level: 0\n  }));\n}\n\nconst DEFAULT_MONTH_LABELS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nconst DEFAULT_WEEKDAY_LABELS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst DEFAULT_LABELS = {\n  months: DEFAULT_MONTH_LABELS,\n  weekdays: DEFAULT_WEEKDAY_LABELS,\n  totalCount: '{{count}} contributions in {{year}}',\n  legend: {\n    less: 'Less',\n    more: 'More'\n  }\n};\n\nconst ActivityCalendar = ({\n  data,\n  blockMargin = 4,\n  blockRadius = 2,\n  blockSize = 12,\n  children,\n  color: color$1 = undefined,\n  dateFormat = 'MMM do, yyyy',\n  fontSize = 14,\n  hideColorLegend = false,\n  hideMonthLabels = false,\n  hideTotalCount = false,\n  labels: labelsProp,\n  loading = false,\n  showWeekdayLabels = false,\n  style = {},\n  theme: themeProp,\n  weekStart = 0 // Sunday\n\n}) => {\n  var _data$;\n\n  if (loading) {\n    data = generateEmptyData();\n  }\n\n  if (data.length === 0) {\n    return null;\n  }\n\n  const weeks = groupByWeeks(data, weekStart);\n  const totalCount = data.reduce((sum, day) => sum + day.count, 0);\n  const year = getYear(parseISO((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.date));\n  const theme = getTheme(themeProp, color$1);\n  const labels = Object.assign({}, DEFAULT_LABELS, labelsProp);\n  const textHeight = hideMonthLabels ? 0 : fontSize + 2 * blockMargin;\n\n  function getDimensions() {\n    return {\n      width: weeks.length * (blockSize + blockMargin) - blockMargin,\n      height: textHeight + (blockSize + blockMargin) * 7 - blockMargin\n    };\n  }\n\n  function getTooltipMessage(contribution) {\n    const date = format(parseISO(contribution.date), dateFormat);\n    return `<strong>${contribution.count} contributions</strong> on ${date}`;\n  }\n\n  function renderLabels() {\n    const style = {\n      fontSize\n    };\n\n    if (!showWeekdayLabels && hideMonthLabels) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, showWeekdayLabels && /*#__PURE__*/React.createElement(\"g\", {\n      className: getClassName('legend-weekday'),\n      style: style\n    }, weeks[1].map((day, y) => {\n      if (!day || y % 2 === 0) {\n        return null;\n      }\n\n      const dayIndex = getDay(parseISO(day.date));\n      return /*#__PURE__*/React.createElement(\"text\", {\n        x: -2 * blockMargin,\n        y: textHeight + (fontSize / 2 + blockMargin) + (blockSize + blockMargin) * y,\n        textAnchor: \"end\",\n        key: day.date\n      }, labels.weekdays ? labels.weekdays[dayIndex] : DEFAULT_WEEKDAY_LABELS[dayIndex]);\n    })), !hideMonthLabels && /*#__PURE__*/React.createElement(\"g\", {\n      className: getClassName('legend-month'),\n      style: style\n    }, getMonthLabels(weeks, labels.months).map(({\n      text,\n      x\n    }, index, labels) => {\n      // Skip the first month label if there's not enough space to the next one\n      if (index === 0 && labels[1] && labels[1].x - x <= MIN_DISTANCE_MONTH_LABELS) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"text\", {\n        x: (blockSize + blockMargin) * x,\n        alignmentBaseline: \"hanging\",\n        key: x\n      }, text);\n    })));\n  }\n\n  function renderBlocks() {\n    return weeks.map((week, weekIndex) => week.map((day, dayIndex) => {\n      if (!day) {\n        return null;\n      }\n\n      const style = loading ? {\n        animation: `${styles.loadingAnimation} 1.5s ease-in-out infinite`,\n        animationDelay: `${weekIndex * 20 + dayIndex * 20}ms`\n      } : undefined;\n      return /*#__PURE__*/React.createElement(\"rect\", {\n        x: 0,\n        y: textHeight + (blockSize + blockMargin) * dayIndex,\n        width: blockSize,\n        height: blockSize,\n        fill: theme[`level${day.level}`],\n        rx: blockRadius,\n        ry: blockRadius,\n        className: styles.block,\n        \"data-date\": day.date,\n        \"data-tip\": children ? getTooltipMessage(day) : undefined,\n        key: day.date,\n        style: style\n      });\n    })).map((week, x) => /*#__PURE__*/React.createElement(\"g\", {\n      key: x,\n      transform: `translate(${(blockSize + blockMargin) * x}, 0)`\n    }, week));\n  }\n\n  function renderFooter() {\n    var _labels$legend$less, _labels$legend, _labels$legend$more, _labels$legend2;\n\n    if (hideTotalCount && hideColorLegend) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"footer\", {\n      className: getClassName('footer', styles.footer),\n      style: {\n        marginTop: blockMargin,\n        fontSize\n      }\n    }, loading && /*#__PURE__*/React.createElement(\"div\", null, \"\\xA0\"), !loading && !hideTotalCount && /*#__PURE__*/React.createElement(\"div\", {\n      className: getClassName('count')\n    }, labels.totalCount ? labels.totalCount.replace('{{count}}', String(totalCount)).replace('{{year}}', String(year)) : `${totalCount} contributions in ${year}`), !loading && !hideColorLegend && /*#__PURE__*/React.createElement(\"div\", {\n      className: getClassName('legend-colors'),\n      style: {\n        marginLeft: 'auto'\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginRight: '0.5em'\n      }\n    }, (_labels$legend$less = labels === null || labels === void 0 ? void 0 : (_labels$legend = labels.legend) === null || _labels$legend === void 0 ? void 0 : _labels$legend.less) !== null && _labels$legend$less !== void 0 ? _labels$legend$less : 'Less'), Array(5).fill(undefined).map((_, index) => /*#__PURE__*/React.createElement(\"svg\", {\n      width: blockSize,\n      height: blockSize,\n      key: index,\n      style: {\n        margin: '0 0.1em'\n      }\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      width: blockSize,\n      height: blockSize,\n      fill: theme[`level${index}`],\n      rx: blockRadius,\n      ry: blockRadius\n    }))), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: '0.5em'\n      }\n    }, (_labels$legend$more = labels === null || labels === void 0 ? void 0 : (_labels$legend2 = labels.legend) === null || _labels$legend2 === void 0 ? void 0 : _labels$legend2.more) !== null && _labels$legend$more !== void 0 ? _labels$legend$more : 'More')));\n  }\n\n  const {\n    width,\n    height\n  } = getDimensions();\n  const additionalStyles = {\n    width,\n    maxWidth: '100%',\n    // Required to have correct colors in CSS loading animation\n    [`--${NAMESPACE}-loading`]: theme.level0,\n    [`--${NAMESPACE}-loading-active`]: color(theme.level0).darken(8).toString()\n  };\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: NAMESPACE,\n    style: { ...style,\n      ...additionalStyles\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    viewBox: `0 0 ${width} ${height}`,\n    className: getClassName('calendar', styles.calendar)\n  }, !loading && renderLabels(), renderBlocks()), renderFooter(), children);\n};\n\nconst Skeleton = props => /*#__PURE__*/React.createElement(ActivityCalendar, _extends({\n  data: []\n}, props));\n\nexport { Skeleton, createCalendarTheme, ActivityCalendar as default };","map":{"version":3,"sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/util.ts","../src/component/ActivityCalendar.tsx"],"names":["NAMESPACE","MIN_DISTANCE_MONTH_LABELS","DEFAULT_THEME","createCalendarTheme","weekStart","days","firstDate","parseISO","firstCalendarDate","getDay","subWeeks","nextDay","paddedDays","Array","differenceInCalendarDays","Math","calendarWeek","monthNames","firstWeekDay","week","day","month","getMonth","prev","labels","index","x","y","text","label","emptyColor","color","base","level4","level3","level2","level1","level0","Object","name","styles","year","eachDayOfInterval","start","end","date","formatISO","representation","count","level","DEFAULT_MONTH_LABELS","DEFAULT_WEEKDAY_LABELS","DEFAULT_LABELS","months","weekdays","totalCount","legend","less","more","ActivityCalendar","blockMargin","blockRadius","blockSize","dateFormat","fontSize","hideColorLegend","hideMonthLabels","hideTotalCount","loading","showWeekdayLabels","style","theme","data","generateEmptyData","weeks","groupByWeeks","sum","getYear","getTheme","textHeight","width","height","format","contribution","getClassName","dayIndex","animation","loadingAnimation","animationDelay","weekIndex","children","getTooltipMessage","marginTop","String","marginLeft","marginRight","margin","getDimensions","additionalStyles","maxWidth","tinycolor","renderLabels","renderBlocks","renderFooter","Skeleton","props"],"mappings":"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","sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import color, { ColorInput } from 'tinycolor2';\nimport differenceInCalendarDays from 'date-fns/differenceInCalendarDays';\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport formatISO from 'date-fns/formatISO';\nimport getDay from 'date-fns/getDay';\nimport getMonth from 'date-fns/getMonth';\nimport nextDay from 'date-fns/nextDay';\nimport parseISO from 'date-fns/parseISO';\nimport subWeeks from 'date-fns/subWeeks';\nimport type { Day as WeekDay } from 'date-fns';\n\nimport { Day, Weeks, Theme } from './types';\n\nexport const NAMESPACE = 'react-activity-calendar';\nexport const MIN_DISTANCE_MONTH_LABELS = 2;\n\nconst DEFAULT_THEME = createCalendarTheme('#042a33');\n\ninterface Label {\n  x: number;\n  y: number;\n  text: string;\n}\n\nexport function groupByWeeks(\n  days: Array<Day>,\n  weekStart: WeekDay = 0, // 0 = Sunday\n): Weeks {\n  if (days.length === 0) {\n    return [];\n  }\n\n  // Determine the first date of the calendar. If the first contribution date is\n  // not specified week day the desired day one week earlier will be selected.\n  const firstDate = parseISO(days[0].date);\n  const firstCalendarDate =\n    getDay(firstDate) === weekStart ? firstDate : subWeeks(nextDay(firstDate, weekStart), 1);\n\n  // In order to correctly group contributions by week it is necessary to left pad the list\n  const paddedDays = [\n    ...Array(differenceInCalendarDays(firstDate, firstCalendarDate)).fill(undefined),\n    ...days,\n  ];\n\n  return Array(Math.ceil(paddedDays.length / 7))\n    .fill(undefined)\n    .map((_, calendarWeek) => paddedDays.slice(calendarWeek * 7, calendarWeek * 7 + 7));\n}\n\nexport function getMonthLabels(\n  weeks: Weeks,\n  monthNames: Array<string> = DEFAULT_MONTH_LABELS,\n): Array<Label> {\n  return weeks\n    .reduce<Array<Label>>((labels, week, index) => {\n      const firstWeekDay = week.find(day => day !== undefined);\n\n      if (!firstWeekDay) {\n        throw new Error(`Unexpected error: Week is empty: [${week}]`);\n      }\n\n      const month = monthNames[getMonth(parseISO(firstWeekDay.date))];\n      const prev = labels[labels.length - 1];\n\n      if (index === 0 || prev.text !== month) {\n        return [\n          ...labels,\n          {\n            x: index,\n            y: 0,\n            text: month,\n          },\n        ];\n      }\n\n      return labels;\n    }, [])\n    .filter((label, index, labels) => {\n      if (index === 0) {\n        return labels[1] && labels[1].x - label.x > MIN_DISTANCE_MONTH_LABELS;\n      }\n\n      return true;\n    });\n}\n\nexport function createCalendarTheme(\n  baseColor: ColorInput,\n  emptyColor = color('white').darken(8).toHslString(),\n): Theme {\n  const base = color(baseColor);\n\n  if (!base.isValid()) {\n    return DEFAULT_THEME;\n  }\n\n  return {\n    level4: base.setAlpha(0.92).toHslString(),\n    level3: base.setAlpha(0.76).toHslString(),\n    level2: base.setAlpha(0.6).toHslString(),\n    level1: base.setAlpha(0.44).toHslString(),\n    level0: emptyColor,\n  };\n}\n\nexport function getTheme(theme?: Theme, color?: ColorInput): Theme {\n  if (theme) {\n    return Object.assign({}, DEFAULT_THEME, theme);\n  }\n\n  if (color) {\n    return createCalendarTheme(color);\n  }\n\n  return DEFAULT_THEME;\n}\n\nexport function getClassName(name: string, styles?: string): string {\n  if (styles) {\n    return `${NAMESPACE}__${name} ${styles}`;\n  }\n\n  return `${NAMESPACE}__${name}`;\n}\n\nexport function generateEmptyData(): Array<Day> {\n  const year = new Date().getFullYear();\n  const days = eachDayOfInterval({\n    start: new Date(year, 0, 1),\n    end: new Date(year, 11, 31),\n  });\n\n  return days.map(date => ({\n    date: formatISO(date, { representation: 'date' }),\n    count: 0,\n    level: 0,\n  }));\n}\n\nexport const DEFAULT_MONTH_LABELS = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nexport const DEFAULT_WEEKDAY_LABELS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nexport const DEFAULT_LABELS = {\n  months: DEFAULT_MONTH_LABELS,\n  weekdays: DEFAULT_WEEKDAY_LABELS,\n  totalCount: '{{count}} contributions in {{year}}',\n  legend: {\n    less: 'Less',\n    more: 'More',\n  },\n};\n","import React, { FunctionComponent, CSSProperties, ReactNode } from 'react';\nimport tinycolor, { ColorInput } from 'tinycolor2';\nimport format from 'date-fns/format';\nimport getDay from 'date-fns/getDay';\nimport getYear from 'date-fns/getYear';\nimport parseISO from 'date-fns/parseISO';\nimport type { Day as WeekDay } from 'date-fns';\n\nimport styles from './styles.css';\n\nimport { Day, Labels, Theme } from '../types';\nimport {\n  generateEmptyData,\n  getClassName,\n  getMonthLabels,\n  getTheme,\n  groupByWeeks,\n  MIN_DISTANCE_MONTH_LABELS,\n  NAMESPACE,\n  DEFAULT_WEEKDAY_LABELS,\n  DEFAULT_LABELS,\n} from '../util';\n\ntype CalendarData = Array<Day>;\n\nexport interface Props {\n  /**\n   * List of calendar entries. Every `Day` object requires an ISO 8601 `date`\n   * property in the format `yyyy-MM-dd`, a `count` property with the amount\n   * of tracked data and finally a `level` property in the range `0 - 4` to\n   * specify activity intensity.\n   *\n   * Example object:\n   *\n   * ```json\n   * {\n   *   date: \"2021-02-20\",\n   *   count: 16,\n   *   level: 3\n   * }\n   * ```\n   */\n  data: CalendarData;\n  /**\n   * Margin between blocks in pixels.\n   */\n  blockMargin?: number;\n  /**\n   * Border radius of blocks in pixels.\n   */\n  blockRadius?: number;\n  /**\n   * Block size in pixels.\n   */\n  blockSize?: number;\n  /**\n   * Pass `<ReactTooltip html />` as child to show tooltips.\n   */\n  children?: ReactNode;\n  /**\n   * Base color to compute graph intensity hues (darkest color). Any valid CSS color is accepted\n   */\n  color?: ColorInput;\n  /**\n   * A date-fns/format compatible date string used in tooltips.\n   */\n  dateFormat?: string;\n  /**\n   * Font size for text in pixels.\n   */\n  fontSize?: number;\n  /**\n   * Toggle to hide color legend below calendar.\n   */\n  hideColorLegend?: boolean;\n  /**\n   * Toggle to hide month labels above calendar.\n   */\n  hideMonthLabels?: boolean;\n  /**\n   * Toggle to hide total count below calendar.\n   */\n  hideTotalCount?: boolean;\n  /**\n   * Localization strings for all calendar labels. `totalCount` supports the placeholders `{{count}}` and `{{year}}`:\n   */\n  labels?: Labels;\n  /**\n   * Toggle for loading state. `data` property will be ignored if set.\n   */\n  loading?: boolean;\n  /**\n   * Toggle to show weekday labels left to the calendar.\n   */\n  showWeekdayLabels?: boolean;\n  /**\n   * Style object to pass to component container.\n   */\n  style?: CSSProperties;\n  /**\n   * An object specifying all theme colors explicitly`.\n   */\n  theme?: Theme;\n  /**\n   * Index of day to be used as start of week. 0 represents Sunday.\n   */\n  weekStart?: WeekDay;\n}\n\nconst ActivityCalendar: FunctionComponent<Props> = ({\n  data,\n  blockMargin = 4,\n  blockRadius = 2,\n  blockSize = 12,\n  children,\n  color = undefined,\n  dateFormat = 'MMM do, yyyy',\n  fontSize = 14,\n  hideColorLegend = false,\n  hideMonthLabels = false,\n  hideTotalCount = false,\n  labels: labelsProp,\n  loading = false,\n  showWeekdayLabels = false,\n  style = {},\n  theme: themeProp,\n  weekStart = 0, // Sunday\n}: Props) => {\n  if (loading) {\n    data = generateEmptyData();\n  }\n\n  if (data.length === 0) {\n    return null;\n  }\n\n  const weeks = groupByWeeks(data, weekStart);\n  const totalCount = data.reduce((sum, day) => sum + day.count, 0);\n  const year = getYear(parseISO(data[0]?.date));\n\n  const theme = getTheme(themeProp, color);\n  const labels = Object.assign({}, DEFAULT_LABELS, labelsProp);\n  const textHeight = hideMonthLabels ? 0 : fontSize + 2 * blockMargin;\n\n  function getDimensions() {\n    return {\n      width: weeks.length * (blockSize + blockMargin) - blockMargin,\n      height: textHeight + (blockSize + blockMargin) * 7 - blockMargin,\n    };\n  }\n\n  function getTooltipMessage(contribution: Day) {\n    const date = format(parseISO(contribution.date), dateFormat);\n    return `<strong>${contribution.count} contributions</strong> on ${date}`;\n  }\n\n  function renderLabels() {\n    const style = {\n      fontSize,\n    };\n\n    if (!showWeekdayLabels && hideMonthLabels) {\n      return null;\n    }\n\n    return (\n      <>\n        {showWeekdayLabels && (\n          <g className={getClassName('legend-weekday')} style={style}>\n            {weeks[1].map((day, y) => {\n              if (!day || y % 2 === 0) {\n                return null;\n              }\n\n              const dayIndex = getDay(parseISO(day.date));\n\n              return (\n                <text\n                  x={-2 * blockMargin}\n                  y={textHeight + (fontSize / 2 + blockMargin) + (blockSize + blockMargin) * y}\n                  textAnchor=\"end\"\n                  key={day.date}\n                >\n                  {labels.weekdays ? labels.weekdays[dayIndex] : DEFAULT_WEEKDAY_LABELS[dayIndex]}\n                </text>\n              );\n            })}\n          </g>\n        )}\n        {!hideMonthLabels && (\n          <g className={getClassName('legend-month')} style={style}>\n            {getMonthLabels(weeks, labels.months).map(({ text, x }, index, labels) => {\n              // Skip the first month label if there's not enough space to the next one\n              if (index === 0 && labels[1] && labels[1].x - x <= MIN_DISTANCE_MONTH_LABELS) {\n                return null;\n              }\n\n              return (\n                <text x={(blockSize + blockMargin) * x} alignmentBaseline=\"hanging\" key={x}>\n                  {text}\n                </text>\n              );\n            })}\n          </g>\n        )}\n      </>\n    );\n  }\n\n  function renderBlocks() {\n    return weeks\n      .map((week, weekIndex) =>\n        week.map((day, dayIndex) => {\n          if (!day) {\n            return null;\n          }\n\n          const style = loading\n            ? {\n                animation: `${styles.loadingAnimation} 1.5s ease-in-out infinite`,\n                animationDelay: `${weekIndex * 20 + dayIndex * 20}ms`,\n              }\n            : undefined;\n\n          return (\n            <rect\n              x={0}\n              y={textHeight + (blockSize + blockMargin) * dayIndex}\n              width={blockSize}\n              height={blockSize}\n              fill={theme[`level${day.level}` as keyof Theme]}\n              rx={blockRadius}\n              ry={blockRadius}\n              className={styles.block}\n              data-date={day.date}\n              data-tip={children ? getTooltipMessage(day) : undefined}\n              key={day.date}\n              style={style}\n            />\n          );\n        }),\n      )\n      .map((week, x) => (\n        <g key={x} transform={`translate(${(blockSize + blockMargin) * x}, 0)`}>\n          {week}\n        </g>\n      ));\n  }\n\n  function renderFooter() {\n    if (hideTotalCount && hideColorLegend) {\n      return null;\n    }\n\n    return (\n      <footer\n        className={getClassName('footer', styles.footer)}\n        style={{ marginTop: blockMargin, fontSize }}\n      >\n        {/* Placeholder */}\n        {loading && <div>&nbsp;</div>}\n\n        {!loading && !hideTotalCount && (\n          <div className={getClassName('count')}>\n            {labels.totalCount\n              ? labels.totalCount\n                  .replace('{{count}}', String(totalCount))\n                  .replace('{{year}}', String(year))\n              : `${totalCount} contributions in ${year}`}\n          </div>\n        )}\n\n        {!loading && !hideColorLegend && (\n          <div className={getClassName('legend-colors')} style={{ marginLeft: 'auto' }}>\n            <span style={{ marginRight: '0.5em' }}>{labels?.legend?.less ?? 'Less'}</span>\n            {Array(5)\n              .fill(undefined)\n              .map((_, index) => (\n                <svg width={blockSize} height={blockSize} key={index} style={{ margin: '0 0.1em' }}>\n                  <rect\n                    width={blockSize}\n                    height={blockSize}\n                    fill={theme[`level${index}` as keyof Theme]}\n                    rx={blockRadius}\n                    ry={blockRadius}\n                  />\n                </svg>\n              ))}\n            <span style={{ marginLeft: '0.5em' }}>{labels?.legend?.more ?? 'More'}</span>\n          </div>\n        )}\n      </footer>\n    );\n  }\n\n  const { width, height } = getDimensions();\n  const additionalStyles = {\n    width,\n    maxWidth: '100%',\n    // Required to have correct colors in CSS loading animation\n    [`--${NAMESPACE}-loading`]: theme.level0,\n    [`--${NAMESPACE}-loading-active`]: tinycolor(theme.level0).darken(8).toString(),\n  };\n\n  return (\n    <article className={NAMESPACE} style={{ ...style, ...additionalStyles }}>\n      <svg\n        width={width}\n        height={height}\n        viewBox={`0 0 ${width} ${height}`}\n        className={getClassName('calendar', styles.calendar)}\n      >\n        {!loading && renderLabels()}\n        {renderBlocks()}\n      </svg>\n      {renderFooter()}\n      {children}\n    </article>\n  );\n};\n\nexport const Skeleton: FunctionComponent<Omit<Props, 'data'>> = props => (\n  <ActivityCalendar data={[]} {...props} />\n);\n\nexport default ActivityCalendar;\n"]},"metadata":{},"sourceType":"module"}