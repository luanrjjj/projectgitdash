{"ast":null,"code":"var _jsxFileName = \"/home/luan/Documentos/githubproject/src/Components/Repos/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { DropdownStyles, ReposStyles, Section } from './styles';\nimport { RiGitRepositoryLine } from 'react-icons/ri';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Repos = ({\n  repoData\n}) => {\n  _s();\n\n  const [topRepos, setTopRepos] = useState([]);\n  const [sortType, setSortType] = useState('stargazers_count');\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const map = {\n    stars: 'stargazers_count',\n    forks: 'forks_count',\n    size: 'size'\n  };\n  const sortTypes = ['stargazers_count', 'forks_count', 'size'];\n\n  const getTopRepos = typed => {\n    const LIMIT = 8;\n    const sorted = repoData.filter(repo => !repo.fork).sort((a, b) => b[typed] - a[typed]).slice(0, LIMIT);\n    console.log(555555555555, sorted);\n    setTopRepos(sorted);\n  };\n\n  useEffect(() => {\n    if (repoData) {\n      getTopRepos(sortType);\n    }\n  }, [repoData, sortType]);\n\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\n\n  const changeRepoSort = sortType => {\n    setSortType(sortType);\n    toggleDropdown();\n  };\n\n  console.log(100000, topRepos);\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: repoData && /*#__PURE__*/_jsxDEV(ReposStyles, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Top Repos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"by\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DropdownStyles, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown_list\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-sorted\",\n                children: sortType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown_list-item\",\n                children: sortTypes.map((type, i) => /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn-list\",\n                    onClick: () => changeRepoSort(type),\n                    children: type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 25\n                  }, this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RepoList\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"RepoCards\",\n          children: topRepos && topRepos.map(repo => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"RepoCard\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"CardTitle\",\n              children: [/*#__PURE__*/_jsxDEV(RiGitRepositoryLine, {\n                className: \"CardIcon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"RepoName\",\n                children: repo === null || repo === void 0 ? void 0 : repo.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: repo.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"CardDetails\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: repo.language\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: repo.forks_count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: repo.size\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 20\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this)]\n          }, repo.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Repos, \"F+nEsxKLQqAVKKMnAOVW+QJl+CE=\");\n\n_c = Repos;\nexport default Repos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repos\");","map":{"version":3,"sources":["/home/luan/Documentos/githubproject/src/Components/Repos/index.tsx"],"names":["React","useState","useEffect","DropdownStyles","ReposStyles","Section","RiGitRepositoryLine","Repos","repoData","topRepos","setTopRepos","sortType","setSortType","dropdownOpen","setDropdownOpen","map","stars","forks","size","sortTypes","getTopRepos","typed","LIMIT","sorted","filter","repo","fork","sort","a","b","slice","console","log","toggleDropdown","changeRepoSort","type","i","name","description","language","forks_count"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,EAAyBC,WAAzB,EAAsCC,OAAtC,QAAqD,UAArD;AAEA,SAASC,mBAAT,QAAoC,gBAApC;;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAAA;;AAEnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,kBAAD,CAAxC;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAMc,GAAG,GAAG;AACVC,IAAAA,KAAK,EAAE,kBADG;AAEVC,IAAAA,KAAK,EAAE,aAFG;AAGVC,IAAAA,IAAI,EAAE;AAHI,GAAZ;AAOA,QAAMC,SAAS,GAAG,CAAC,kBAAD,EAAqB,aAArB,EAAoC,MAApC,CAAlB;;AAKA,QAAMC,WAAW,GAAIC,KAAD,IAAmB;AACrC,UAAMC,KAAK,GAAG,CAAd;AACA,UAAMC,MAAM,GAAGf,QAAQ,CAACgB,MAAT,CAAiBC,IAAD,IAC7B,CAACA,IAAI,CAACC,IADO,EACDC,IADC,CACI,CAACC,CAAD,EAA8BC,CAA9B,KACcA,CAAC,CAACR,KAAD,CAAD,GAAWO,CAAC,CAACP,KAAD,CAF9B,EAEuCS,KAFvC,CAE6C,CAF7C,EAEgDR,KAFhD,CAAf;AAGAS,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BT,MAA1B;AAIAb,IAAAA,WAAW,CAACa,MAAD,CAAX;AAED,GAXD;;AAYArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,QAAJ,EAAc;AACZY,MAAAA,WAAW,CAACT,QAAD,CAAX;AACD;AAEF,GALQ,EAKN,CAACH,QAAD,EAAWG,QAAX,CALM,CAAT;;AAOA,QAAMsB,cAAc,GAAG,MAAMnB,eAAe,CAAC,CAACD,YAAF,CAA5C;;AAEA,QAAMqB,cAAc,GAAIvB,QAAD,IAAsB;AAC3CC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAsB,IAAAA,cAAc;AACf,GAHD;;AAIAF,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBvB,QAApB;AAIA,sBAEE,QAAC,OAAD;AAAA,cACGD,QAAQ,iBACP,QAAC,WAAD;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,cAAD;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,sCACE;AAAQ,gBAAA,SAAS,EAAC,YAAlB;AAAA,0BAAgCG;AAAhC;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,0BACGQ,SAAS,CAACJ,GAAV,CAAc,CAACoB,IAAD,EAAOC,CAAP,kBACb;AAAA,yCACE;AAAQ,oBAAA,SAAS,EAAC,UAAlB;AAA6B,oBAAA,OAAO,EAAE,MAAMF,cAAc,CAACC,IAAD,CAA1D;AAAA,8BAAmEA;AAAnE;AAAA;AAAA;AAAA;AAAA;AADF,mBAAQC,CAAR;AAAA;AAAA;AAAA;AAAA,wBADD;AADH;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA0BE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA,oBACG3B,QAAQ,IAAIA,QAAQ,CAACM,GAAT,CAAaU,IAAI,iBAE5B;AAAI,YAAA,SAAS,EAAC,UAAd;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACE,QAAC,mBAAD;AAAqB,gBAAA,SAAS,EAAE;AAAhC;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAI,gBAAA,SAAS,EAAC,UAAd;AAAA,0BAA0BA,IAA1B,aAA0BA,IAA1B,uBAA0BA,IAAI,CAAEY;AAAhC;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE;AAAA,wBAAIZ,IAAI,CAACa;AAAT;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,sCACC;AAAA,0BAAOb,IAAI,CAACc;AAAZ;AAAA;AAAA;AAAA;AAAA,sBADD,eAEC;AAAA,0BAAOd,IAAI,CAACe;AAAZ;AAAA;AAAA;AAAA;AAAA,sBAFD,eAGC;AAAA,0BAAOf,IAAI,CAACP;AAAZ;AAAA;AAAA;AAAA;AAAA,sBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA,aAA8BO,IAAI,CAACY,IAAnC;AAAA;AAAA;AAAA;AAAA,kBAFW;AADf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UAFF;AA2DD,CA1GD;;GAAM9B,K;;KAAAA,K;AA4GN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DropdownStyles, ReposStyles, Section } from './styles';\n\nimport { RiGitRepositoryLine } from 'react-icons/ri'\n\n\nconst Repos = ({ repoData }: any) => {\n\n  const [topRepos, setTopRepos] = useState([]);\n  const [sortType, setSortType] = useState('stargazers_count');\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n\n  const map = {\n    stars: 'stargazers_count',\n    forks: 'forks_count',\n    size: 'size',\n  };\n\n\n  const sortTypes = ['stargazers_count', 'forks_count', 'size']\n\n\n  type typed = \"stars\" | \"forks\" | \"size\"\n\n  const getTopRepos = (typed: string) => {\n    const LIMIT = 8;\n    const sorted = repoData.filter((repo: { fork: any; }) =>\n      !repo.fork).sort((a: { [x: string]: number; }, b:\n        { [x: string]: number; }) => b[typed] - a[typed]).slice(0, LIMIT);\n    console.log(555555555555, sorted)\n\n\n\n    setTopRepos(sorted)\n\n  }\n  useEffect(() => {\n    if (repoData) {\n      getTopRepos(sortType);\n    }\n\n  }, [repoData, sortType]);\n\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\n\n  const changeRepoSort = (sortType: string) => {\n    setSortType(sortType);\n    toggleDropdown();\n  }\n  console.log(100000, topRepos)\n\n\n\n  return (\n\n    <Section>\n      {repoData && (\n        <ReposStyles>\n          <header>\n            <h2>Top Repos</h2>\n\n            <div className=\"dropdown-wrapper\">\n              <span>by</span>\n\n\n              <DropdownStyles >\n                <div className=\"dropdown_list\">\n                  <button className=\"btn-sorted\">{sortType}</button>\n                  <div className=\"dropdown_list-item\" >\n                    {sortTypes.map((type, i) =>\n                      <a key={i}>\n                        <button className=\"btn-list\" onClick={() => changeRepoSort(type)}>{type}</button>\n                      </a>\n\n                    )}\n                  </div>\n                </div>\n\n              </DropdownStyles>\n            </div>\n          </header>\n\n\n          <div className=\"RepoList\">\n            <ul className=\"RepoCards\">\n              {topRepos && topRepos.map(repo =>\n\n                <li className=\"RepoCard\" key={repo.name}>\n                  <div className=\"CardTitle\">\n                    <RiGitRepositoryLine className= \"CardIcon\"/>\n                    <h1 className=\"RepoName\">{repo?.name}</h1>\n                  </div>\n                  <p>{repo.description}</p>\n                  <div className=\"CardDetails\">\n                   <span>{repo.language}</span>\n                   <span>{repo.forks_count}</span>\n                   <span>{repo.size}</span>\n                  </div>\n                </li>\n\n              )}\n            </ul>\n          </div>\n\n        </ReposStyles>\n\n      )}\n    </Section>\n\n\n  )\n\n}\n\nexport default Repos;"]},"metadata":{},"sourceType":"module"}