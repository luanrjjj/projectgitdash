{"ast":null,"code":"var _jsxFileName = \"/home/luan/Documentos/githubproject/src/pages/Dashboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport GhPolyglot from 'gh-polyglot';\nimport { Section, UserInfoStyles, Graphs, BgColor, Calendar } from './styles';\nimport Charts from '../../Components/Charts';\nimport { FiCalendar } from 'react-icons/fi';\nimport { GoLocation } from 'react-icons/go';\nimport Repos from '../../Components/Repos';\nimport React from 'react';\nimport Header from '../../Components/Header/index';\nimport GitHubCalendar from 'react-github-calendar';\nimport ReactTooltip from 'react-tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserData = () => {\n  _s();\n\n  const [userData, setUserData] = useState(null);\n  const [langData, setLangData] = useState(null);\n  const [repoData, setRepoData] = useState(null);\n  const [error, setError] = useState({\n    active: false,\n    type: 200\n  });\n  const userGeneral = useRouteMatch();\n  const username = userGeneral.params.user;\n\n  const getUserData = () => {\n    fetch(`https://api.github.com/users/${username}`).then(response => {\n      if (response.status === 404) {\n        return setError({\n          active: true,\n          type: 404\n        });\n      }\n\n      if (response.status === 403) {\n        return setError({\n          active: true,\n          type: 403\n        });\n      }\n\n      return response.json();\n    }).then(json => setUserData(json)).catch(error => {\n      setError({\n        active: true,\n        type: 400\n      });\n      console.error('Error:', error);\n    });\n  };\n\n  const getLangData = () => {\n    const me = new GhPolyglot(`${username}`);\n    me.userStats((err, stats) => {\n      if (err) {\n        console.error('Error:', err);\n        setError({\n          active: true,\n          type: 400\n        });\n      }\n\n      setLangData(stats);\n    });\n  };\n\n  const getRepoData = () => {\n    fetch(`https://api.github.com/users/${username}/repos?per_page=100`).then(response => {\n      if (response.status === 404) {\n        return setError({\n          active: true,\n          type: 404\n        });\n      }\n\n      if (response.status === 403) {\n        return setError({\n          active: true,\n          type: 403\n        });\n      }\n\n      return response.json();\n    }).then(json => setRepoData(json)).catch(error => {\n      setError({\n        active: true,\n        type: 200\n      });\n      console.error('Error:', error);\n    });\n  };\n\n  useEffect(() => {\n    getRepoData();\n    getLangData();\n    getUserData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this), userData && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(BgColor, {\n        children: [/*#__PURE__*/_jsxDEV(Section, {\n          children: /*#__PURE__*/_jsxDEV(UserInfoStyles, {\n            children: [userData.avatar_url && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: userData.avatar_url,\n                alt: \"avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this), userData.name && /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: userData.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }, this), userData.login && /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: userData.html_url,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: [\"@\", userData.login]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info\",\n              children: [userData.location && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info__item\",\n                children: [/*#__PURE__*/_jsxDEV(GoLocation, {\n                  className: \"icon\",\n                  size: \"16\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 15\n                }, this), userData.location]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 13\n              }, this), userData.created_at && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"info__item\",\n                  children: [/*#__PURE__*/_jsxDEV(FiCalendar, {\n                    className: \"icon\",\n                    size: \"16\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 11\n                  }, this), \"Joined\", ' ', new Date(userData.created_at).toLocaleDateString('pt-BR', {\n                    month: 'long',\n                    day: 'numeric',\n                    year: 'numeric'\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats__item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"num\",\n                  children: userData.public_repos.toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"num-label\",\n                  children: \"Repositories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats__item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"num\",\n                  children: userData.followers.toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"num-label\",\n                  children: \"Followers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats__item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"num\",\n                  children: userData.following.toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"num-label\",\n                  children: \"Following\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Graphs, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              children: langData && repoData && /*#__PURE__*/_jsxDEV(Charts, {\n                id: \"langChart\",\n                langData: langData,\n                repoData: repoData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n          children: /*#__PURE__*/_jsxDEV(GitHubCalendar, {\n            year: 2021,\n            blockMargin: 10,\n            username: \"luanrjjj\",\n            children: /*#__PURE__*/_jsxDEV(ReactTooltip, {\n              html: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Repos, {\n          repoData: repoData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 6\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n\n_s(UserData, \"gnhzawhCPWS9WHJc3pMgxgbykY4=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = UserData;\nexport default UserData;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserData\");","map":{"version":3,"sources":["/home/luan/Documentos/githubproject/src/pages/Dashboard/index.tsx"],"names":["useState","useEffect","useRouteMatch","GhPolyglot","Section","UserInfoStyles","Graphs","BgColor","Calendar","Charts","FiCalendar","GoLocation","Repos","React","Header","GitHubCalendar","ReactTooltip","UserData","userData","setUserData","langData","setLangData","repoData","setRepoData","error","setError","active","type","userGeneral","username","params","user","getUserData","fetch","then","response","status","json","catch","console","getLangData","me","userStats","err","stats","getRepoData","avatar_url","name","login","html_url","location","created_at","Date","toLocaleDateString","month","day","year","public_repos","toLocaleString","followers","following"],"mappings":"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","sourcesContent":["import react, {useState, useEffect } from 'react';\nimport {useRouteMatch} from 'react-router-dom';\nimport GhPolyglot from 'gh-polyglot';\nimport {Section,UserInfoStyles,Graphs,BgColor, Calendar} from './styles';\nimport Charts from '../../Components/Charts';\nimport {FiCalendar } from 'react-icons/fi';\nimport { GoLocation } from 'react-icons/go';\nimport Repos from '../../Components/Repos'\nimport React from 'react';\nimport Header from '../../Components/Header/index'\nimport GitHubCalendar from 'react-github-calendar';\nimport ReactTooltip from 'react-tooltip';\n\n\ninterface UserParams  {\n    user:string;\n\n}\n\ninterface userData {\navatar_url:string;\nname:string;\ncreated_at:string;\nlocation:string;\nlogin:string;\nhtml_url:string;\npublic_repos:string;\nfollowers:string;\nfollowing:string;\n}\n\n\nconst UserData:React.FC= ()  => {\n    \n    const [userData,setUserData] = useState<userData|null>(null);\n    \n    const[langData,setLangData] = useState(null);\n    const[repoData,setRepoData] = useState(null);\n\n    const [error,setError] = useState({active:false,type:200})\n\n    const userGeneral = useRouteMatch<UserParams>()\n    const username = userGeneral.params.user\n    \n\nconst getUserData = () => {\n    \n    fetch(`https://api.github.com/users/${username}`)\n    .then(response => {\n        if (response.status === 404) {\n            return setError ({active: true, type:404})\n        }\n        if(response.status===403) {\n            return setError({active:true,type:403});\n        }\n       \n        return response.json();\n        \n\n\n    }).then(json => setUserData(json))\n    .catch(error=> {\n        setError({active:true,type:400});\n        console.error ('Error:',error);\n    })\n};\n\n\nconst getLangData = () => {\n    const me = new GhPolyglot(`${username}`);\n    \n    me.userStats((err: Error, stats: react.SetStateAction<null>) => {\n      if (err) {\n        console.error('Error:', err);\n        setError({ active: true, type: 400 });\n      }\n     \n      setLangData(stats);\n    \n      \n    }); \n    \n  };\n\n  \n\n  const getRepoData = () => {\n    fetch(`https://api.github.com/users/${username}/repos?per_page=100`)\n      .then(response => {\n        if (response.status === 404) {\n          return setError({ active: true, type: 404 });\n        }\n        if (response.status === 403) {\n          return setError({ active: true, type: 403 });\n        }\n      \n        return response.json();\n        \n      })\n      .then(json => setRepoData(json))\n      .catch(error => {\n        setError({ active: true, type: 200 });\n        console.error('Error:', error);\n      });\n      \n  };\n\n  useEffect(()=> {\n    getRepoData();\n    getLangData();\n    getUserData();\n  },[])\n\n\n  \n  return (\n    \n    <>\n    <Header/>\n   {userData && (\n     <>\n     <BgColor>\n     <Section>\n            <UserInfoStyles>\n                {userData.avatar_url && (\n                  <div className =\"avatar\">\n                    <img src = {userData.avatar_url} alt =\"avatar\"/>\n                  </div>\n                )}\n      {userData.name && <h1>{userData.name}</h1>}\n\n      {userData.login && (\n          <h2>\n            <a href={userData.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n              @{userData.login}\n            </a>\n          </h2>\n        )}  \n<div className= \"info\">\n{userData.location && (\n            <span className=\"info__item\">\n              <GoLocation className =\"icon\" size=\"16\" />\n              {userData.location}\n            </span>\n          )}\n\n      {userData.created_at && (\n        <>\n        <span className =\"info__item\">\n          <FiCalendar className= \"icon\" size = \"16\"/>\n          Joined{' '}\n          {new Date (userData.created_at).toLocaleDateString('pt-BR',{\n            month: 'long',\n            day: 'numeric',\n            year: 'numeric'  \n                   })}\n        </span>\n      </>\n      )}\n\n</div>\n       <div className=\"stats\">\n          <div className=\"stats__item\">\n            <span className=\"num\">{userData.public_repos.toLocaleString()}</span>\n            <span className=\"num-label\">Repositories</span>\n          </div>\n          <div className=\"stats__item\">\n            <span className=\"num\">{userData.followers.toLocaleString()}</span>\n            <span className=\"num-label\">Followers</span>\n          </div>\n          <div className=\"stats__item\">\n            <span className=\"num\">{userData.following.toLocaleString()}</span>\n            <span className=\"num-label\">Following</span>\n          </div>\n        </div>\n      \n      </UserInfoStyles>\n      </Section>\n      <Graphs>\n        <div className = \"chart\">\n          \n          <div className = \"chart-container\">\n          {langData && repoData && <Charts id = \"langChart\" langData={langData} repoData={repoData}/>}\n     \n            \n          </div>\n        </div>\n      \n        </Graphs>\n        <Calendar>\n        <GitHubCalendar year={2021} blockMargin={10} username=\"luanrjjj\">\n        <ReactTooltip html />\n        </GitHubCalendar>\n        </Calendar>\n        <Repos repoData={repoData}/>\n\n        </BgColor>\n            </>\n            \n        )\n                }\n               \n\n </>\n  )\n\n};\nexport default UserData\n\n\n"]},"metadata":{},"sourceType":"module"}