{"ast":null,"code":"var _jsxFileName = \"/home/luan/Documentos/githubproject/src/pages/UserSearch/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport { FiChevronRight } from 'react-icons/fi';\nimport React from 'react';\nimport { Users } from './styles';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserSearch = () => {\n  _s();\n\n  const [newUser, setNewUser] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [users, setUsers] = useState(() => {\n    const storageUsers = localStorage.getItem(`@GithubExplorer:users`);\n\n    if (storageUsers) {\n      return JSON.parse(storageUsers);\n    }\n\n    return [];\n  });\n  useEffect(() => {\n    localStorage.setItem(`GithubExplorer:users`, JSON.stringify(users));\n  }, [users]);\n\n  async function handleAddUser(event) {\n    event.preventDefault();\n\n    if (!newUser) {\n      setInputError('Digite o autor/nome do reposit贸rio');\n      return;\n    }\n\n    try {\n      const response = await api.get(`users/${newUser}`);\n      const user = response.data;\n      setUsers([...users, user]);\n      setNewUser('');\n      setInputError('');\n    } catch (err) {\n      setInputError('Erro na busca por esse Reposit贸rio');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Users, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"GitDa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"sh.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-search\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: newUser,\n            onChange: e => setNewUser(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"highlight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Search the User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/users/${user.login}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.avatar_url,\n          alt: user.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: user.login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: user.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(FiChevronRight, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }, this)]\n      }, user.login, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserSearch, \"1tKjRlBE3rUKZ0sPHHocsyNUU+c=\");\n\n_c = UserSearch;\nexport default UserSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSearch\");","map":{"version":3,"sources":["/home/luan/Documentos/githubproject/src/pages/UserSearch/index.tsx"],"names":["Link","FiChevronRight","React","Users","useEffect","useState","api","UserSearch","newUser","setNewUser","inputError","setInputError","users","setUsers","storageUsers","localStorage","getItem","JSON","parse","setItem","stringify","handleAddUser","event","preventDefault","response","get","user","data","err","e","target","value","map","login","avatar_url","description"],"mappings":"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","sourcesContent":["\nimport Header from '../../Components/Header/index'\n\n\nimport { Link } from 'react-router-dom';\n\nimport { FiChevronRight } from 'react-icons/fi'\nimport React, { FormEvent } from 'react';\nimport { Users } from './styles';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport api from '../../services/api';\n\n\ninterface User {\n    full_name: string;\n    login: string;\n    description: string;\n    avatar_url: string;\n    owner: {\n        login: string;\n        avatar_url: string;\n    }\n}\n\nconst UserSearch: React.FC = () => {\n\n    const [newUser,setNewUser] = useState('');\n    const [inputError,setInputError] = useState('');\n    const [ users,setUsers] = useState <User[]>(()=> {\n    const storageUsers = localStorage.getItem(`@GithubExplorer:users`)\n\n\n\n    if (storageUsers) {\n        return JSON.parse(storageUsers)\n    }\n    return [];\n\n})\n\n\n    useEffect (()=> {\n        localStorage.setItem (\n            `GithubExplorer:users`,JSON.stringify(users));\n        \n\n    },[users]);\n\n    async function handleAddUser (event:FormEvent<HTMLFormElement>):Promise<void> {\n        event.preventDefault();\n    \n        if (!newUser) {\n            setInputError('Digite o autor/nome do reposit贸rio');\n            return;\n        }\n        try {\n            const response = await api.get(`users/${newUser}`)\n            \n            const user = response.data\n\n            \n            \n            setUsers ([...users,user]);\n            setNewUser('');\n            setInputError('');\n\n        } catch(err) {\n            setInputError('Erro na busca por esse Reposit贸rio')\n        }\n        \n    \n    }\n\n\n\n\n\n\n\n    \n  \n\n\n    return (\n        <>\n            \n            <Users>\n                <div className=\"logo-container\">\n                <div className=\"logo\">\n                <span>\n                    GitDa\n                </span>\n                <p>sh.</p>\n                </div>\n                </div>\n                <div className=\"input-group\">\n                    <div className = \"input-search\">\n                    <input \n                    value = {newUser} \n                    onChange={(e) => setNewUser(e.target.value)}\n                    />\n                    <span className=\"highlight\"></span>\n                    <label>Search the User</label>\n                </div>\n\n                </div>\n\n                \n                {users.map(user=> (\n              <Link key = {user.login} to= {`/users/${user.login}`} >\n                  <img src ={user.avatar_url} alt = {user.login}/>\n                  <div> \n                      <strong>{user.login}</strong>\n                      <p>{user.description}</p>\n                  </div>\n                  <FiChevronRight size ={20}/>\n              </Link>\n          ))}\n          \n\n            </Users>\n\n        </>\n    )\n}\nexport default UserSearch;\n"]},"metadata":{},"sourceType":"module"}