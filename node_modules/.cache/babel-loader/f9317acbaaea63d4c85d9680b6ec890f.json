{"ast":null,"code":"var _jsxFileName = \"/home/luan/Documentos/githubproject/src/Components/Repos/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { DropdownStyles, ReposStyles, Section } from './styles';\nimport { RiGitRepositoryLine, RiStarSLine } from 'react-icons/ri';\nimport { BiGitRepoForked } from 'react-icons/bi';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Repos = ({\n  repoData\n}) => {\n  _s();\n\n  const [topRepos, setTopRepos] = useState([]);\n  const [sortType, setSortType] = useState('stars');\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const map = {\n    stars: 'stargazers_count',\n    forks: 'forks_count',\n    size: 'size'\n  };\n  const sortTypes = ['stars', 'forks', 'size'];\n\n  const getTopRepos = typed => {\n    let typedFilter;\n\n    switch (typed) {\n      case 'stars':\n        typedFilter = 'stargazers_count';\n        break;\n\n      case 'forks':\n        typedFilter = 'forks_count';\n        break;\n\n      case typed = 'size':\n        typedFilter = 'size';\n        break;\n    }\n\n    const LIMIT = 8;\n    const sorted = repoData.filter(repo => !repo.fork).sort((a, b) => b[typedFilter] - a[typedFilter]).slice(0, LIMIT);\n    setTopRepos(sorted);\n  };\n\n  useEffect(() => {\n    if (repoData) {\n      getTopRepos(sortType);\n    }\n  }, [repoData, sortType]);\n\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\n\n  const changeRepoSort = sortType => {\n    setSortType(sortType);\n    toggleDropdown();\n  };\n\n  console.log('topRepos', topRepos);\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: repoData && /*#__PURE__*/_jsxDEV(ReposStyles, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Top Repos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"by\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DropdownStyles, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown_list\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-sorted\",\n                children: sortType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown_list-item\",\n                children: sortTypes.map((type, i) => /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn-list\",\n                    onClick: () => changeRepoSort(type),\n                    children: type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 25\n                  }, this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RepoList\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"RepoCards\",\n          children: topRepos && topRepos.map(repo => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"RepoCard\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: `${repo.html_url}`\n              },\n              target: \"_blank\",\n              style: {\n                textDecoration: 'none'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"CardTitle\",\n                children: [/*#__PURE__*/_jsxDEV(RiGitRepositoryLine, {\n                  className: \"CardIcon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"RepoName\",\n                  children: repo === null || repo === void 0 ? void 0 : repo.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: repo.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"CardDetails\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: repo.language\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(RiStarSLine, {\n                  className: \"CardIconStar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: repo.stargazers_count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(BiGitRepoForked, {\n                  className: \"CardIconFork\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: repo.forks_count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [repo.size, \" KB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 20\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)\n          }, repo.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Repos, \"j9ncOXIoOMfgl33vL8pSzc1Ih9k=\");\n\n_c = Repos;\nexport default Repos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repos\");","map":{"version":3,"sources":["/home/luan/Documentos/githubproject/src/Components/Repos/index.tsx"],"names":["React","useState","useEffect","DropdownStyles","ReposStyles","Section","RiGitRepositoryLine","RiStarSLine","BiGitRepoForked","Link","Repos","repoData","topRepos","setTopRepos","sortType","setSortType","dropdownOpen","setDropdownOpen","map","stars","forks","size","sortTypes","getTopRepos","typed","typedFilter","LIMIT","sorted","filter","repo","fork","sort","a","b","slice","toggleDropdown","changeRepoSort","console","log","type","i","pathname","html_url","textDecoration","name","description","language","stargazers_count","forks_count"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DropdownStyles, ReposStyles, Section } from './styles';\n\nimport { RiGitRepositoryLine,RiStarSLine } from 'react-icons/ri'\nimport {BiGitRepoForked} from 'react-icons/bi'\nimport {Link} from \"react-router-dom\";\n\nconst Repos = ({ repoData }: any) => {\n\n  const [topRepos, setTopRepos] = useState([]);\n  const [sortType, setSortType] = useState('stars');\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n\n  const map = {\n    stars: 'stargazers_count',\n    forks: 'forks_count',\n    size: 'size',\n  };\n\n\n  const sortTypes = ['stars', 'forks', 'size']\n  \n\n\n  type typed = \"stars\" | \"forks\" | \"size\"\n\n  const getTopRepos = (typed: string) => {\n    let typedFilter:string;\n    switch(typed) {\n      case 'stars':\n        typedFilter='stargazers_count';\n        break;\n      case 'forks':\n        typedFilter='forks_count';\n        break;\n      case typed='size':\n        typedFilter='size';\n        break;\n      \n\n    }\n    const LIMIT = 8;\n    const sorted = repoData.filter((repo: { fork: any; }) =>\n      !repo.fork).sort((a: { [x: string]: number; }, b:\n        { [x: string]: number; }) => b[typedFilter] - a[typedFilter]).slice(0, LIMIT);\n    \n\n\n\n    setTopRepos(sorted)\n\n  }\n  useEffect(() => {\n    if (repoData) {\n      getTopRepos(sortType);\n    }\n\n  }, [repoData, sortType]);\n\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\n\n  const changeRepoSort = (sortType: string) => {\n    setSortType(sortType);\n    toggleDropdown();\n  }\n \n\nconsole.log('topRepos',topRepos)\n\n  return (\n\n    <Section>\n      {repoData && (\n        <ReposStyles>\n          <header>\n            <h2>Top Repos</h2>\n\n            <div className=\"dropdown-wrapper\">\n              <span>by</span>\n\n\n              <DropdownStyles >\n                <div className=\"dropdown_list\">\n                  <button className=\"btn-sorted\">{sortType}</button>\n                  <div className=\"dropdown_list-item\" >\n                    {sortTypes.map((type, i) =>\n                      <a key={i}>\n                        <button className=\"btn-list\" onClick={() => changeRepoSort(type)}>{type}</button>\n                      </a>\n\n                    )}\n                  </div>\n                </div>\n\n              </DropdownStyles>\n            </div>\n          </header>\n\n\n          <div className=\"RepoList\">\n            <ul className=\"RepoCards\">\n\n              {topRepos && topRepos.map(repo =>\n              \n                <li className=\"RepoCard\" key={repo.name}>\n                  <Link to={{pathname:`${repo.html_url}`}} target=\"_blank\" style={{textDecoration: 'none'}}>\n                  <div className=\"CardTitle\">\n                    <RiGitRepositoryLine className= \"CardIcon\"/>\n                    <h1 className=\"RepoName\">{repo?.name}</h1>\n                  </div>\n                  <p>{repo.description}</p>\n                  <div className=\"CardDetails\">\n                    \n                   <span>{repo.language}</span>\n                   <RiStarSLine className=\"CardIconStar\"/>\n                   <span>{repo.stargazers_count}</span>\n                   <BiGitRepoForked className=\"CardIconFork\"/>\n                   <span>{repo.forks_count}</span>\n                   <span>{repo.size} KB</span>\n                  </div>\n                  </Link>\n                </li>\n\n              )}\n            </ul>\n          </div>\n\n        </ReposStyles>\n\n      )}\n    </Section>\n\n\n  )\n\n}\n\nexport default Repos;"]},"metadata":{},"sourceType":"module"}