{"ast":null,"code":"import Chart from 'chart.js';\nimport theme from '../styles/theme';\nconst {\n  fonts\n} = theme;\n\nconst buildScales = axes => {\n  const scales = {\n    xAxes: [{\n      ticks: {\n        fontFamily: fonts.inter,\n        fontSize: 12\n      }\n    }],\n    yAxes: [{\n      ticks: {\n        beginAtZero: true,\n        fontFamily: fonts.inter,\n        fontSize: 12\n      }\n    }]\n  };\n  return axes ? scales : undefined;\n};\n\nconst buildLegend = legend => {\n  const leg = {\n    position: 'right',\n    labels: {\n      fontFamily: fonts.inter\n    }\n  };\n  return legend ? leg : undefined;\n};\n\nconst buildChart = config => {\n  const {\n    ctx,\n    chartType,\n    labels,\n    data,\n    backgroundColor,\n    borderColor,\n    axes,\n    legend\n  } = config;\n  const chart = new Chart(ctx, {\n    type: chartType,\n    data: {\n      labels,\n      datasets: [{\n        data,\n        backgroundColor,\n        borderColor,\n        borderWidth: 1\n      }]\n    },\n    options: {\n      scales: buildScales(axes),\n      legend: buildLegend(legend)\n    }\n  });\n};\n\nexport default buildChart;","map":{"version":3,"sources":["/home/luan/Documentos/githubproject/src/utils/buildChart.tsx"],"names":["Chart","theme","fonts","buildScales","axes","scales","xAxes","ticks","fontFamily","inter","fontSize","yAxes","beginAtZero","undefined","buildLegend","legend","leg","position","labels","buildChart","config","ctx","chartType","data","backgroundColor","borderColor","chart","type","datasets","borderWidth","options"],"mappings":"AAAA,OAAOA,KAAP,MAAiF,UAAjF;AACA,OAAQC,KAAR,MAAoB,iBAApB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAYD,KAAlB;;AAeA,MAAME,WAAW,GAAKC,IAAD,IAAc;AACjC,QAAMC,MAAM,GAAG;AACbC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAEN,KAAK,CAACO,KADb;AAELC,QAAAA,QAAQ,EAAE;AAFL;AADT,KADK,CADM;AASbC,IAAAA,KAAK,EAAE,CACL;AACEJ,MAAAA,KAAK,EAAE;AACLK,QAAAA,WAAW,EAAE,IADR;AAELJ,QAAAA,UAAU,EAAEN,KAAK,CAACO,KAFb;AAGLC,QAAAA,QAAQ,EAAE;AAHL;AADT,KADK;AATM,GAAf;AAoBA,SAAON,IAAI,GAAGC,MAAH,GAAYQ,SAAvB;AACD,CAtBD;;AAwBA,MAAMC,WAAW,GAAIC,MAAD,IAA+B;AACjD,QAAMC,GAAuB,GAAG;AAC9BC,IAAAA,QAAQ,EAAE,OADoB;AAE9BC,IAAAA,MAAM,EAAE;AACNV,MAAAA,UAAU,EAAEN,KAAK,CAACO;AADZ;AAFsB,GAAhC;AAMA,SAAOM,MAAM,GAAGC,GAAH,GAASH,SAAtB;AACD,CARD;;AAUA,MAAMM,UAAc,GAAIC,MAAD,IAAgB;AACrC,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,SAAP;AAAkBJ,IAAAA,MAAlB;AAA0BK,IAAAA,IAA1B;AAAgCC,IAAAA,eAAhC;AAAiDC,IAAAA,WAAjD;AAA8DrB,IAAAA,IAA9D;AAAoEW,IAAAA;AAApE,MAA+EK,MAArF;AAEF,QAAMM,KAAY,GAAI,IAAI1B,KAAJ,CAAUqB,GAAV,EAAe;AACnCM,IAAAA,IAAI,EAAEL,SAD6B;AAEnCC,IAAAA,IAAI,EAAE;AACJL,MAAAA,MADI;AAEJU,MAAAA,QAAQ,EAAE,CACR;AACEL,QAAAA,IADF;AAEEC,QAAAA,eAFF;AAGEC,QAAAA,WAHF;AAIEI,QAAAA,WAAW,EAAC;AAJd,OADQ;AAFN,KAF6B;AAenCC,IAAAA,OAAO,EAAE;AACPzB,MAAAA,MAAM,EAAEF,WAAW,CAACC,IAAD,CADZ;AAEPW,MAAAA,MAAM,EAAED,WAAW,CAACC,MAAD;AAFZ;AAf0B,GAAf,CAAtB;AAsBC,CAzBD;;AA2BA,eAAeI,UAAf","sourcesContent":["import Chart, {  ChartData, ChartDataSets, ChartLegendOptions, ChartPoint } from 'chart.js';\nimport  theme  from '../styles/theme';\nconst { fonts } = theme;\n\ninterface Chart1 extends ChartData {\n  \n  ctx:string;\n  chartType:string;\n  legend:ChartLegendOptions;\n  axes:string;\n  borderColor:string;\n  data:any,\n  backgroundColor:string;\n\n  }\n  \n\nconst buildScales = ((axes:any) => {\n  const scales = {\n    xAxes: [\n      {\n        ticks: {\n          fontFamily: fonts.inter,\n          fontSize: 12,\n        },\n      },\n    ],\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n          fontFamily: fonts.inter,\n          fontSize: 12,\n        },\n      },\n    ],\n  };\n\n  return axes ? scales : undefined;\n})\n\nconst buildLegend = (legend:ChartLegendOptions) => {\n  const leg :ChartLegendOptions = {\n    position: 'right',\n    labels: {\n      fontFamily: fonts.inter,\n    },\n  };\n  return legend ? leg : undefined;\n};\n\nconst buildChart:any = (config:any) => {\n  const { ctx, chartType, labels, data, backgroundColor, borderColor, axes, legend } = config;\n\nconst chart :Chart =  new Chart(ctx, {\n  type: chartType,\n  data: {\n    labels,\n    datasets: [\n      {\n        data,\n        backgroundColor,\n        borderColor,\n        borderWidth:1,\n      }\n    ]\n  },\n  \n  \n  options: {\n    scales: buildScales(axes),\n    legend: buildLegend(legend),\n  },\n});\n\n  \n};\n\nexport default buildChart;"]},"metadata":{},"sourceType":"module"}