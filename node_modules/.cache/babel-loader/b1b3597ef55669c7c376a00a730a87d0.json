{"ast":null,"code":"var _jsxFileName = \"/home/luan/Documentos/githubproject/src/Components/Repos/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Section } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Repos = ({\n  repoData\n}) => {\n  _s();\n\n  const [topRepos, setTopRepos] = useState([]);\n  const [sortType, setSortType] = useState('stars');\n  const map = {\n    stars: 'stargazers_count',\n    forks: 'forks_count',\n    size: 'size'\n  };\n\n  const getTopRepos = typed => {\n    const LIMIT = 8;\n    const sortProperty = map[typed];\n    const sorted = repoData.filter(repo => !repo.fork).sort((a, b) => b[map[typed]] - a[map[typed]]).slice(0, LIMIT);\n    setTopRepos(sorted);\n  };\n\n  useEffect(() => {\n    if (repoData) {\n      getTopRepos(repoData);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Top Repos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Repos, \"YQ8sbB5p3pDNLBwZLgR03Vl9YPE=\");\n\n_c = Repos;\nexport default Repos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repos\");","map":{"version":3,"sources":["/home/luan/Documentos/githubproject/src/Components/Repos/index.tsx"],"names":["React","useState","useEffect","Section","Repos","repoData","topRepos","setTopRepos","sortType","setSortType","map","stars","forks","size","getTopRepos","typed","LIMIT","sortProperty","sorted","filter","repo","fork","sort","a","b","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,OAAR,QAAsB,UAAtB;;;AAIA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAmB;AAAA;;AAC7B,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBN,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACO,QAAD,EAAUC,WAAV,IAAyBR,QAAQ,CAAC,OAAD,CAAvC;AAEA,QAAMS,GAAG,GAAG;AACRC,IAAAA,KAAK,EAAC,kBADE;AAERC,IAAAA,KAAK,EAAE,aAFC;AAGRC,IAAAA,IAAI,EAAC;AAHG,GAAZ;;AAQJ,QAAMC,WAAW,GAAIC,KAAD,IAAiB;AAIjC,UAAMC,KAAK,GAAG,CAAd;AAGA,UAAMC,YAAY,GAAGP,GAAG,CAACK,KAAD,CAAxB;AACA,UAAMG,MAAM,GAAGb,QAAQ,CAACc,MAAT,CAAiBC,IAAD,IAA0B,CAACA,IAAI,CAACC,IAAhD,EAAsDC,IAAtD,CAA2D,CAACC,CAAD,EAA6BC,CAA7B,KAA6DA,CAAC,CAACd,GAAG,CAACK,KAAD,CAAJ,CAAD,GAAgBQ,CAAC,CAACb,GAAG,CAACK,KAAD,CAAJ,CAAzI,EAAuJU,KAAvJ,CAA6J,CAA7J,EAA+JT,KAA/J,CAAf;AACET,IAAAA,WAAW,CAACW,MAAD,CAAX;AAEL,GAXD;;AAaAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIG,QAAJ,EAAc;AACZS,MAAAA,WAAW,CAACT,QAAD,CAAX;AACD;AACF,GAJM,EAIJ,EAJI,CAAT;AASE,sBACI,QAAC,OAAD;AAAA,2BACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaD,CA/CD;;GAAMD,K;;KAAAA,K;AAiDN,eAAeA,KAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Section} from './styles';\n\n\n\nconst Repos = ({repoData}:any)=> {\n    const [topRepos,setTopRepos] = useState([]);\n    const [sortType,setSortType] = useState('stars');\n   \n    const map = {\n        stars:'stargazers_count',\n        forks :'forks_count',\n        size:'size',\n    };\n   \ntype typed= \"stars\"|\"forks\"|\"size\"\n\nconst getTopRepos = (typed:typed) => {\n   \n    \n    \n    const LIMIT = 8;\n   \n\n    const sortProperty = map[typed];\n    const sorted = repoData.filter((repo: { fork: any; }) => !repo.fork).sort((a: { [x: string]: number; },b: { [x: string]: number; }) => b[map[typed]] - a[map[typed]]).slice(0,LIMIT);\n      setTopRepos(sorted)\n      \n}\n\nuseEffect(() => {\n    if (repoData) {\n      getTopRepos(repoData);\n    }\n  }, []);\n\n\n\n\n  return (\n      <Section>\n          <header>\n              <h2>Top Repos</h2>\n\n\n          </header>\n      </Section>\n\n\n\n  )\n\n}\n\nexport default Repos;\n"]},"metadata":{},"sourceType":"module"}