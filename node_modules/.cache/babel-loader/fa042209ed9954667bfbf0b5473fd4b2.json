{"ast":null,"code":"var _jsxFileName = \"/home/luan/Documentos/githubproject/src/Components/Header/index.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { NavHeader, NavLogo } from './styles';\nimport gitLogo from '../../assets/gitLogo.png';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [newUser, setNewUser] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [users, setUsers] = useState(_s(() => {\n    _s();\n\n    const storageUsers = localStorage.getItem(`@GithubExplorer:users`);\n\n    async function handleAddUser(event) {\n      event.preventDefault();\n\n      if (!newUser) {\n        setInputError('Digite o autor/nome do reposit贸rio');\n        return;\n      }\n\n      try {\n        const response = await api.get(`users/${newUser}`);\n        const user = response.data;\n        setUsers([...users, user]);\n        setNewUser('');\n        setInputError('');\n      } catch (err) {\n        setInputError('Erro na busca por esse Reposit贸rio');\n      }\n    }\n\n    useEffect(() => {\n      localStorage.setItem(`GithubExplorer:users`, JSON.stringify(users));\n    }, [users]);\n\n    if (storageUsers) {\n      return JSON.parse(storageUsers);\n    }\n\n    return [];\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"));\n  return /*#__PURE__*/_jsxDEV(NavHeader, {\n    children: /*#__PURE__*/_jsxDEV(NavLogo, {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"logo\",\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: gitLogo,\n          alt: \"gitlogo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Header, \"xadzsbOb8Riux7WQPNSBMKMcgko=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/luan/Documentos/githubproject/src/Components/Header/index.tsx"],"names":["React","useState","useEffect","NavHeader","NavLogo","gitLogo","api","Header","newUser","setNewUser","inputError","setInputError","users","setUsers","storageUsers","localStorage","getItem","handleAddUser","event","preventDefault","response","get","user","data","err","setItem","JSON","stringify","parse"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAiD,OAAjD;AACA,SAAQC,SAAR,EAAkBC,OAAlB,QAAgC,UAAhC;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;;AAgBA,MAAMC,MAAe,GAAG,MAAM;AAAA;;AAAA;;AAE1B,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBR,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACS,UAAD,EAAYC,aAAZ,IAA6BV,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAAEW,KAAF,EAAQC,QAAR,IAAoBZ,QAAQ,IAAU,MAAK;AAAA;;AACjD,UAAMa,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAsB,uBAAtB,CAArB;;AAGA,mBAAeC,aAAf,CAA8BC,KAA9B,EAA8E;AAC1EA,MAAAA,KAAK,CAACC,cAAN;;AAEA,UAAI,CAACX,OAAL,EAAc;AACVG,QAAAA,aAAa,CAAC,oCAAD,CAAb;AACA;AACH;;AACD,UAAI;AACA,cAAMS,QAAQ,GAAG,MAAMd,GAAG,CAACe,GAAJ,CAAS,SAAQb,OAAQ,EAAzB,CAAvB;AAEA,cAAMc,IAAI,GAAGF,QAAQ,CAACG,IAAtB;AAGAV,QAAAA,QAAQ,CAAE,CAAC,GAAGD,KAAJ,EAAUU,IAAV,CAAF,CAAR;AACAb,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,QAAAA,aAAa,CAAC,EAAD,CAAb;AACH,OATD,CASE,OAAMa,GAAN,EAAW;AACTb,QAAAA,aAAa,CAAC,oCAAD,CAAb;AACH;AAGJ;;AAEDT,IAAAA,SAAS,CAAE,MAAK;AACZa,MAAAA,YAAY,CAACU,OAAb,CACK,sBADL,EAC2BC,IAAI,CAACC,SAAL,CAAef,KAAf,CAD3B;AAIH,KALQ,EAKP,CAACA,KAAD,CALO,CAAT;;AASA,QAAIE,YAAJ,EAAkB;AACd,aAAOY,IAAI,CAACE,KAAL,CAAWd,YAAX,CAAP;AACH;;AAED,WAAO,EAAP;AAEC,GA1CiC,kCAAlC;AA8CA,sBACA,QAAC,SAAD;AAAA,2BACI,QAAC,OAAD;AAAA,6BACA;AAAG,QAAA,SAAS,EAAG,MAAf;AAAsB,QAAA,IAAI,EAAG,GAA7B;AAAA,+BACI;AAAK,UAAA,GAAG,EAAIT,OAAZ;AAAqB,UAAA,GAAG,EAAG;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAYH,CA9DD;;IAAME,M;;KAAAA,M;AAiEN,eAAeA,MAAf","sourcesContent":["import React,{useState,useEffect,FormEvent} from 'react';\nimport {NavHeader,NavLogo} from './styles';\nimport gitLogo from '../../assets/gitLogo.png'\nimport api from '../../services/api'\n\n\ninterface User {\n    full_name:string;\n    login:string;\n    description: string;\n    avatar_url:string;\n    owner: {\n        login:string;\n        avatar_url:string;\n    }\n}\n\n\n\nconst Header:React.FC = () => {\n\n    const [newUser,setNewUser] = useState('');\n    const [inputError,setInputError] = useState('');\n    const [ users,setUsers] = useState <User[]>(()=> {\n    const storageUsers = localStorage.getItem(`@GithubExplorer:users`)\n\n\n    async function handleAddUser (event:FormEvent<HTMLFormElement>):Promise<void> {\n        event.preventDefault();\n    \n        if (!newUser) {\n            setInputError('Digite o autor/nome do reposit贸rio');\n            return;\n        }\n        try {\n            const response = await api.get(`users/${newUser}`)\n            \n            const user = response.data\n           \n    \n            setUsers ([...users,user]);\n            setNewUser('');\n            setInputError('');\n        } catch(err) {\n            setInputError('Erro na busca por esse Reposit贸rio')\n        }\n        \n    \n    }\n\n    useEffect (()=> {\n        localStorage.setItem (\n            `GithubExplorer:users`,JSON.stringify(users));\n        \n\n    },[users]);\n\n\n\n    if (storageUsers) {\n        return JSON.parse(storageUsers)\n    }\n\n    return [];\n\n    })\n\n\n\n    return(\n    <NavHeader>\n        <NavLogo>\n        <a className = 'logo' href = \"/\">\n            <img src = {gitLogo} alt = \"gitlogo\"/>\n        </a>\n        </NavLogo>\n\n        \n    </NavHeader>\n    )\n\n}\n\n\nexport default Header"]},"metadata":{},"sourceType":"module"}